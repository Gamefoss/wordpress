extends index

append styles
	- wp_enqueue_style( 'owl-carousel', get_template_directory_uri() . "/library/css/third/owl.carousel.css", array(), null );
	- wp_enqueue_style( 'single-css', get_template_directory_uri() . "/library/css/pages/single/single.css", array(), null );

append scripts
- if ( get_field('google-adsense', 'options')):
	script.
		(adsbygoogle = window.adsbygoogle || []).push({
			google_ad_client: "<?php echo get_field('google-adsense', 'options') ?>",
			enable_page_level_ads: true
		});
- endif
block main
	article#single
		block banner
			+banner
				block banner-post-type
					h3.title-3.tt--uppercase
						a(href!=echo('get_post_type_archive_link( get_post_type() )'))
							:php
								switch( get_post_type() ) {
									case "post": 
										echo __("[:pb]Entretenimento[:en]Entertainment[:]");
										break;
									case "podcast":
										echo "Podcasts";
										break;
									default:
										echo get_post_type();
										break;					
								}
				.gutter
				block banner-post-category
					h2.title-2.tt--uppercase
						:php
							//- get taxonomy from post type
							switch( get_post_type() ) {
								case "ludokratia":
									$_taxonomy = "ludokratia_categories";
									break;
								case "podcast":
									$_taxonomy = "podcasts";
									break;
								default:
									$_taxonomy = "category";
									break;
							}
							
							//- get category from post and taxonomy
							$_category = get_the_terms(the_post(), $_taxonomy);
							
							//- only one term
							$_category = reset( $_category );					
						a.badge(href!=echo('get_term_link($_category)') title!=echo('$_category->name') class!=echo('"badge--" . get_post_type()'))!= $_category->name
				.gutter
				.gutter
				h1.title-1!= get_the_title()
				.gutter
				block excerpt
					.excerpt.f--open.t--center.hidden-xs
						em!= get_the_excerpt()
				.gutter
				.gutter
				.info.wrap
					block author
						:php
							$_author = (object) array(
							'avatar'		=> get_avatar_url( get_the_author_meta( 'ID' ), array(
								'size'		=> 24
							) ),
							'name'			=> get_the_author_meta( 'display_name' ),
							'nickname'	=> "@" . get_the_author_meta( 'nickname' ),
							'href'			=> get_author_posts_url( get_the_author_meta( 'ID' ) )
							);
						.author-link
							a(href!=echo('$_author->href') title!=echo('$_author->nickname'))
								img(src!=echo('$_author->avatar') alt!=echo('$_author->nickname'))
								!= "<strong>{$_author->name}</strong>&nbsp;|&nbsp;{$_author->nickname}"
							| &nbsp;&nbsp;|&nbsp;&nbsp;
							time(datetime!=echo('get_the_date("Y-m-d")'))!= get_the_date('d/m/Y')
		.wrap
			.col-xs-12
				.gutter
				.gutter
				block share
					- include( locate_template( 'layout/share.php' ) )
				block content
					.single-content.text(class!=echo('get_post_type()'))
						- the_content()
					.cf
					- if ( get_field( "review" ) ) include( locate_template( 'layout/review.php' ) )
			.cf
		.visible-xs
			- ad('square')
		.visible-sm
			- ad('leaderboard')
		.hidden-xs.hidden-sm
			- ad('large-leaderboard')
		block comments
			.wrap
				.col-xs-12
					+compound-header(echo('__("[:pb]ComentÃ¡rios[:en]Comments[:]")'))
					.comments
						.fb-comments(data-href!=echo('get_the_permalink()') data-numposts='12' data-width="100%" )
				.cf
		block related
			block related-query
				:php
					
					//- get related posts field
					$_related = get_field( 'related_posts' );
					
					$_related_ids = array(get_the_ID()); // get theses id's, plus the actual post id
					
					//- add to ignore list
					if ( is_array( $_related ) ) foreach ( $_related as $post ) array_push( $_related_ids, $post->ID );
					
					wp_reset_postdata(); //- reset postdata, since we dit foreach $post
					
					//- get post tags
					$_terms = array();
					//- only id's
					if (get_post_type() != "post") foreach( wp_get_post_terms( get_the_ID(), get_post_type() . "_tags" ) as $_term ) array_push($_terms, $_term->term_id);
					else foreach( wp_get_post_tags(get_the_ID()) as $_term ) array_push($_terms, $_term->term_id);
					
					//- re-fetch related, considering chosen ones plus by post type and tags
					$_related = array_merge( is_array( $_related )? $_related : array(), get_posts( array(
						'post_type' 	=> get_post_type(),
						'tax_query'		=> sizeof( $_terms )? array(
							array(
								'taxonomy'	=> get_post_type() . "_tags",
								'field'			=> "term_id",
								'terms'			=> $_terms
							)
						) : false,
						'numberposts'	=> 4 - ( ( is_array( $_related )? sizeof( $_related ) : 0 ) ),
						'exclude'			=> $_related_ids
					) ) );
			- if ( sizeof( $_related ) ):
				.wrap
					.col-xs-12
						+compound-header(echo('__("[:pb]Relacionados[:en]Related[:]")'))
					.post-block--container
						- foreach ( $_related as $post ):
							.col-xs-12.col-sm-3
								- setup_postdata( $post )
								- post_block()
								- wp_reset_postdata()
						- endforeach
						.cf
					.cf
			- endif
			.gutter
			.gutter
